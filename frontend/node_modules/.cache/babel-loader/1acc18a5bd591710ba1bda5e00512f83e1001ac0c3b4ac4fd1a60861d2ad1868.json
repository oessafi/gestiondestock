{"ast":null,"code":"import axios from \"axios\";\nimport CryptoJS from \"crypto-js\";\nexport default class ApiService {\n  static encrypt(data) {\n    // Retourner la chaîne chiffrée, pas l'objet\n    return CryptoJS.AES.encrypt(data, this.ENCRYPTION_KEY.toString()).toString();\n  }\n  static decrypt(data) {\n    const bytes = CryptoJS.AES.decrypt(data, this.ENCRYPTION_KEY.toString());\n    return bytes.toString(CryptoJS.enc.Utf8);\n  }\n  static saveToken(token) {\n    const encryptedToken = this.encrypt(token);\n    localStorage.setItem(\"token\", encryptedToken);\n  }\n  static getToken() {\n    const encryptedToken = localStorage.getItem(\"token\");\n    if (!encryptedToken) return null;\n    return this.decrypt(encryptedToken);\n  }\n  static saveRole(role) {\n    const encryptedRole = this.encrypt(role);\n    localStorage.setItem(\"role\", encryptedRole);\n  }\n  static getRole() {\n    const encryptedRole = localStorage.getItem(\"role\");\n    if (!encryptedRole) return null;\n    return this.decrypt(encryptedRole);\n  }\n  static clearAuth() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"role\");\n  }\n  static getHeader() {\n    const token = this.getToken();\n    return {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    };\n  }\n\n  /** ------------------- AUTH ------------------- */\n  static async registerUser(registerData) {\n    const response = await axios.post(`${this.BASE_URL}/auth/register`, registerData);\n    return response.data;\n  }\n  static async loginUser(loginData) {\n    const response = await axios.post(`${this.BASE_URL}/auth/login`, loginData);\n    return response.data;\n  }\n  static async getAllUsers() {\n    const response = await axios.get(`${this.BASE_URL}/users/all`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async getLoggedInUsesInfo() {\n    const response = await axios.get(`${this.BASE_URL}/users/current`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async getUserById(userId) {\n    const response = await axios.get(`${this.BASE_URL}/users/${userId}`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async updateUser(userId, userData) {\n    const response = await axios.put(`${this.BASE_URL}/users/update/${userId}`, userData, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async deleteUser(userId) {\n    const response = await axios.delete(`${this.BASE_URL}/users/update/${userId}`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  // ... reste inchangé ...\n\n  /** ------------------- AUTH CHECKERS ------------------- */\n  static logout() {\n    this.clearAuth();\n  }\n  static isAuthenticated() {\n    const token = this.getToken();\n    return !!token;\n  }\n  static isAdmin() {\n    return this.getRole() === \"ADMIN\";\n  }\n  static isAcheteur() {\n    return this.getRole() === \"ACHETEUR\";\n  }\n  static isMagasinier() {\n    return this.getRole() === \"MAGASINIER\";\n  }\n}\nApiService.BASE_URL = \"http://localhost:5050/api\";\nApiService.ENCRYPTION_KEY = \"phegon-dev-inventory\";","map":{"version":3,"names":["axios","CryptoJS","ApiService","encrypt","data","AES","ENCRYPTION_KEY","toString","decrypt","bytes","enc","Utf8","saveToken","token","encryptedToken","localStorage","setItem","getToken","getItem","saveRole","role","encryptedRole","getRole","clearAuth","removeItem","getHeader","Authorization","registerUser","registerData","response","post","BASE_URL","loginUser","loginData","getAllUsers","get","headers","getLoggedInUsesInfo","getUserById","userId","updateUser","userData","put","deleteUser","delete","logout","isAuthenticated","isAdmin","isAcheteur","isMagasinier"],"sources":["C:/Users/Latitude/Desktop/IMS-react-master/frontend/src/service/ApiService.js"],"sourcesContent":["import axios from \"axios\";\nimport CryptoJS from \"crypto-js\";\n\nexport default class ApiService {\n  static BASE_URL = \"http://localhost:5050/api\";\n  static ENCRYPTION_KEY = \"phegon-dev-inventory\";\n\n  static encrypt(data) {\n    // Retourner la chaîne chiffrée, pas l'objet\n    return CryptoJS.AES.encrypt(data, this.ENCRYPTION_KEY.toString()).toString();\n  }\n\n  static decrypt(data) {\n    const bytes = CryptoJS.AES.decrypt(data, this.ENCRYPTION_KEY.toString());\n    return bytes.toString(CryptoJS.enc.Utf8);\n  }\n\n  static saveToken(token) {\n    const encryptedToken = this.encrypt(token);\n    localStorage.setItem(\"token\", encryptedToken);\n  }\n\n  static getToken() {\n    const encryptedToken = localStorage.getItem(\"token\");\n    if (!encryptedToken) return null;\n    return this.decrypt(encryptedToken);\n  }\n\n  static saveRole(role) {\n    const encryptedRole = this.encrypt(role);\n    localStorage.setItem(\"role\", encryptedRole);\n  }\n\n  static getRole() {\n    const encryptedRole = localStorage.getItem(\"role\");\n    if (!encryptedRole) return null;\n    return this.decrypt(encryptedRole);\n  }\n\n  static clearAuth() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"role\");\n  }\n\n  static getHeader() {\n    const token = this.getToken();\n    return {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\",\n    };\n  }\n\n  /** ------------------- AUTH ------------------- */\n  static async registerUser(registerData) {\n    const response = await axios.post(`${this.BASE_URL}/auth/register`, registerData);\n    return response.data;\n  }\n\n  static async loginUser(loginData) {\n    const response = await axios.post(`${this.BASE_URL}/auth/login`, loginData);\n    return response.data;\n  }\n\n  static async getAllUsers() {\n    const response = await axios.get(`${this.BASE_URL}/users/all`, {\n      headers: this.getHeader(),\n    });\n    return response.data;\n  }\n\n  static async getLoggedInUsesInfo() {\n    const response = await axios.get(`${this.BASE_URL}/users/current`, {\n      headers: this.getHeader(),\n    });\n    return response.data;\n  }\n\n  static async getUserById(userId) {\n    const response = await axios.get(`${this.BASE_URL}/users/${userId}`, {\n      headers: this.getHeader(),\n    });\n    return response.data;\n  }\n\n  static async updateUser(userId, userData) {\n    const response = await axios.put(`${this.BASE_URL}/users/update/${userId}`, userData, {\n      headers: this.getHeader(),\n    });\n    return response.data;\n  }\n\n  static async deleteUser(userId) {\n    const response = await axios.delete(`${this.BASE_URL}/users/update/${userId}`, {\n      headers: this.getHeader(),\n    });\n    return response.data;\n  }\n\n  // ... reste inchangé ...\n  \n  /** ------------------- AUTH CHECKERS ------------------- */\n  static logout() {\n    this.clearAuth();\n  }\n\n  static isAuthenticated() {\n    const token = this.getToken();\n    return !!token;\n  }\n\n  static isAdmin() {\n    return this.getRole() === \"ADMIN\";\n  }\n\n  static isAcheteur() {\n    return this.getRole() === \"ACHETEUR\";\n  }\n\n  static isMagasinier() {\n    return this.getRole() === \"MAGASINIER\";\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}